$date
	Sat Jun 18 14:12:05 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$scope module rom $end
$var wire 8 ! addr [7:0] $end
$var wire 24 " data [23:0] $end
$upscope $end
$upscope $end
$scope module test $end
$scope module ram $end
$var wire 8 # addr [7:0] $end
$var wire 1 $ clk $end
$var wire 8 % d_in [7:0] $end
$var wire 1 & rd_ $end
$var wire 1 ' wr_ $end
$var reg 8 ( d_out [7:0] $end
$var integer 32 ) i [31:0] $end
$upscope $end
$upscope $end
$scope module test $end
$scope module minicpu $end
$var wire 1 $ clk $end
$var wire 1 * rst_ $end
$var wire 8 + valE [7:0] $end
$var wire 8 , valB [7:0] $end
$var wire 8 - valA [7:0] $end
$var wire 24 . rom_data [23:0] $end
$var wire 8 / rom_addr [7:0] $end
$var wire 8 0 ram_d_out [7:0] $end
$var wire 8 1 ram_d_in [7:0] $end
$var wire 8 2 ram_addr [7:0] $end
$var wire 2 3 cc [1:0] $end
$var reg 8 4 aluB [7:0] $end
$var reg 3 5 dstE [2:0] $end
$var reg 3 6 dstM [2:0] $end
$var reg 8 7 new_pc [7:0] $end
$var reg 4 8 op [3:0] $end
$var reg 1 & ram_rd_ $end
$var reg 1 ' ram_wr_ $end
$var reg 8 9 valP [7:0] $end
$scope module ALU $end
$var wire 8 : A [7:0] $end
$var wire 8 ; B [7:0] $end
$var wire 4 < op [3:0] $end
$var reg 8 = E [7:0] $end
$var reg 2 > cc [1:0] $end
$upscope $end
$scope module PC $end
$var wire 1 $ clk $end
$var wire 8 ? new_pc [7:0] $end
$var wire 1 * rst_ $end
$var reg 8 @ pc [7:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 $ clk $end
$var wire 3 A dstE [2:0] $end
$var wire 3 B dstM [2:0] $end
$var wire 3 C srcA [2:0] $end
$var wire 3 D srcB [2:0] $end
$var wire 8 E valE [7:0] $end
$var wire 1 F we_ $end
$var wire 8 G valM [7:0] $end
$var reg 8 H valA [7:0] $end
$var reg 8 I valB [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I
b0 H
bx G
1F
b1100100 E
b10 D
b0 C
b0 B
b10 A
b0 @
b11 ?
bx >
b1100100 =
b0 <
b1100100 ;
b0 :
b11 9
b0 8
b11 7
b0 6
b10 5
b1100100 4
bx 3
b1100100 2
bx 1
bx 0
b0 /
b11000000000001001100100 .
b0 -
bx ,
b1100100 +
0*
bx )
bx (
1'
1&
bx %
1$
b1100100 #
b11000000000001001100100 "
b0 !
$end
#5
b110000 )
0$
#10
1$
#15
b110000 )
0$
0F
1*
#20
b10000 #
b10000 2
bx %
bx 1
b11 D
b10000 +
b10000 =
b10000 E
b110 7
b110 ?
b10000 4
b10000 ;
b11 5
b11 A
b110 9
bx ,
bx I
b11000000000001100010000 "
b11000000000001100010000 .
b11 !
b11 /
b11 @
1$
#25
b110000 )
0$
#30
b1100100 :
b1100100 -
b1100100 H
b1010100 #
b1010100 2
b10000 %
b10000 1
b10 C
b1 3
b1 >
b1010100 +
b1010100 =
b1010100 E
b1001 7
b1001 ?
b1 8
b1 <
b1001 9
b10000 ,
b10000 I
b1100010010001100110000 "
b1100010010001100110000 .
b110 !
b110 /
b110 @
1$
#35
b110000 )
0$
#40
b1010100 -
b1010100 H
b1010100 #
b1010100 2
bx %
bx 1
b0 :
b101 D
b11 C
bx 3
bx >
b1010100 +
b1010100 =
b1010100 E
b1100 7
b1100 ?
b0 8
b0 <
b1010100 4
b1010100 ;
b101 5
b101 A
b1100 9
bx ,
bx I
b11100000011010100000000 "
b11100000011010100000000 .
b1001 !
b1001 /
b1001 @
1$
#45
b110000 )
0$
#50
b0 -
b0 H
b10100 #
b10100 2
bx %
bx 1
b0 :
b111 D
b0 C
b10100 +
b10100 =
b10100 E
b1111 7
b1111 ?
b10100 4
b10100 ;
b111 5
b111 A
b1111 9
bx ,
bx I
b11000000000011100010100 "
b11000000000011100010100 .
b1100 !
b1100 /
b1100 @
1$
#55
b110000 )
0$
#60
b10100 :
b10100 4
b10100 ;
b10100 -
b10100 H
b10100 #
b10100 2
b10100 %
b10100 1
b111 D
b111 C
b0 (
b0 0
b0 G
b10011 +
b10011 =
b10011 E
b10010 7
b10010 ?
0&
b100 8
b100 <
b100 6
b100 B
b10010 9
b10100 ,
b10100 I
b101100000100000000000000 "
b101100000100000000000000 .
b1111 !
b1111 /
b1111 @
1$
#65
b110000 )
0$
#70
b11 C
b1010100 %
b1010100 1
b1010100 :
bx (
bx 0
bx G
b10100 +
b10100 =
b10100 E
b10100 #
b10100 2
b10101 7
b10101 ?
0'
1&
b11 8
b11 <
b10011 4
b10011 ;
b0 6
b0 B
b10101 9
b10011 ,
b10011 I
b1010100 -
b1010100 H
b101000000011000000000000 "
b101000000011000000000000 .
b10010 !
b10010 /
b10010 @
1$
#75
b110000 )
0$
#80
b10100 :
b10101 #
b10101 2
b101 C
b10101 +
b10101 =
b10101 E
b11000 7
b11000 ?
b0 8
b0 <
b1 4
b1 ;
b0 5
b0 A
b11000 9
b10100 ,
b10100 I
b100000000101011100000001 "
b100000000101011100000001 .
b10101 !
b10101 /
b10101 @
1$
#85
b110000 )
0$
#90
b10101 #
b10101 2
b1010100 :
b10100 ,
b10100 I
b111 D
b10101 +
b10101 =
b10101 E
b11011 7
b11011 ?
b11 8
b11 <
b10100 4
b10100 ;
b111 5
b111 A
b11011 9
b101000000101000000000000 "
b101000000101000000000000 .
b11000 !
b11000 /
b11000 @
1$
#95
b110000 )
0$
#100
b0 :
b0 -
b0 H
b10110 #
b10110 2
b11110 %
b11110 1
b0 C
b10110 +
b10110 =
b10110 E
b11111 7
b11111 ?
b10101 4
b10101 ;
b11110 9
b10101 ,
b10101 I
b110000000000000000011111 "
b110000000000000000011111 .
b11011 !
b11011 /
b11011 @
1$
#105
b110000 )
0$
#110
b10110 :
b10110 -
b10110 H
b10110 #
b10110 2
b111 C
b11110 (
b11110 0
b11110 G
b10101 +
b10101 =
b10101 E
b10110 %
b10110 1
b11110 7
b11110 ?
1'
0&
b100 8
b100 <
b10110 4
b10110 ;
b100000 9
b10110 ,
b10110 I
b11010000xxxxxxxxxxxxxxxx "
b11010000xxxxxxxxxxxxxxxx .
b11111 !
b11111 /
b11111 @
1$
#115
b110000 )
0$
#120
b0 D
b101 C
b0 %
b0 1
b1010100 :
bx (
bx 0
bx G
b1010100 +
b1010100 =
b1010100 E
b1010100 #
b1010100 2
1&
b0 8
b0 <
b0 4
b0 ;
b0 5
b0 A
b11110 9
b0 ,
b0 I
b1010100 -
b1010100 H
b1111000011010000xxxxxxxx "
b1111000011010000xxxxxxxx .
b11110 !
b11110 /
b11110 @
1$
#125
b110000 )
0$
#130
1$
#135
b110000 )
0$
#136
